@page "/budget/detail/{BudgetId:int}"

@attribute [Authorize]
@inject IBudgetService _budgetService
@inject IBillService _billService
@inject IIncomeService _incomeService

<body class="budget-background-class">
<h3>Detail</h3>
<hr/>

@if (budgetDetail is null)
{
    <p class="text-warning">Sorry, there isn't any information available.'</p>
}
else
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Budget #@budgetDetail.Id</span>
                <span class="text-muted">@budgetDetail.Month</span>
            </div>
            <div class="card-body">
                <h4 class="card-title">@budgetDetail.Month</h4>
                <h5 class="card-text">@budgetDetail.Year</h5>
                <h4 class="card-text">Available Funds:</h4>
                <p class="card-text">$@budgetDetail.AvailableFunds</p>            
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href="/budget/edit/@budgetDetail.Id" class="btn btn-success">Edit</a>
                <a href="/budget" class="btn btn-secondary">Go Back</a>
                <a href="/budget/delete/@budgetDetail.Id" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
}
</body>

@code {
    [Parameter]
    public int BudgetId { get; set; }

    public BudgetDetail? budgetDetail { get; set; }  



    protected override async Task OnInitializedAsync()
    {
        budgetDetail = await _budgetService.GetBudget(BudgetId);

    }
}
